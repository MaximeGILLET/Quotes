@using Quotes.Models
@{
    ViewBag.Title = "MyQuotes";
    var lastPostDate = (DateTime?)ViewData["lastPostDate"];
}
@model UserQuoteListModel
@Scripts.Render("~/bundles/Quotes")

<h1>My Quotes</h1>
@if (lastPostDate != null)
{
    <h3>Hello! You have <span class="label label-default" id="timer"></span> remaining for Today's post!</h3>
}
else
{
    <h3>Done for today, see you tomorow!</h3>
}

<div class="row">
    <div class="col-lg-12">
        @using(Html.BeginForm("PostQuote","Quote",FormMethod.Post)){

            <div id="postQuote" class="input-group input-group-lg">
                <span class="input-group-addon">"</span>
                <input id="text" name="text" type="text" class="form-control quote-form" placeholder="Express yourself...">
                <span class="input-group-addon">"</span>
                <span class="input-group-btn">
                    <button class="btn btn-default" type="submit">Post!</button>
                </span>
            </div>
        }
        
    </div>
</div>

<div class="row">
    <div class="col-lg-12">
        <ul class="media-list">
            @if (Model != null && Model.UserQuotes != null)
            {
                foreach (var item in Model.UserQuotes)
                {
                    <li class="media">
                        <div class="media-left">
                            <a href="#">
                                <img class="media-object" src="@Model.User.ProfileIconPath" alt="">
                            </a>
                        </div>
                        <div class="media-body">
                            <h4 class="media-heading">@item.OriginalDate - Reactions : <span class="badge">42</span></h4>                                
                            <div class="panel panel-default">
                                <div class="panel-body">
                                    @item.QuoteText
                                </div>
                                <div class="panel-footer">
                                    <span class="badge badge-like">@item.Likes</span>
                                    <button id="like" type="button" title="Like!" class="btn btn-default btn-like" onclick="TagQuote(@item.QuoteId,'Like')"><span class="glyphicon glyphicon-thumbs-up"></span></button>
                                    <span class="badge badge-dislike">@item.Dislikes</span>
                                    <button id="dislike" type="button" title="Dislike!" class="btn btn-default btn-dislike" onclick="TagQuote(@item.QuoteId,'Dislike')"><span class="glyphicon glyphicon-thumbs-down"></span></button>
                                    <span class="badge badge-star">@item.Stars</span>
                                    <button id="favorite" type="button" title="Add to Favorites!" class="btn btn-default btn-star" onclick="TagQuote(@item.QuoteId,'Star')"><span class="glyphicon glyphicon-star-empty"></span></button>
                                    <button id="tag" type="button" title="Add a Tag!" class="btn btn-default btn-tag" onclick=""><span class="glyphicon glyphicon-tag"></span></button>   
                                    <button id="report" type="button" title="Report Quote!" class="btn btn-default btn-flag" style="float:right" onclick="TagQuote(@item.QuoteId,'Flag')"><span class="glyphicon glyphicon-flag"></span></button>        
                                </div>
                            </div>
                        </div>
                    </li>
                }
            }           
        </ul>
    </div>
</div>

@if (lastPostDate != null)
{
    <script>
        var end = new Date();
        end.setHours(23, 59, 59, 999);
        setInterval(function() {
            var remaining = getTimeRemaining(end);
            if (remaining.hours < 8) {
                $('#timer').removeClass('label-default').addClass('label-warning');
                if (remaining.hours < 1) {
                    $('#timer').removeClass('label-warning').addClass('label-danger');
                    if(remaining.hours <=0 && remaining.minutes <=0 && remaining.seconds <=0)
                        location.reload();
                }
            } 
            $("#timer").text(remaining.hours + " Hour(s) " + remaining.minutes + " Minute(s) " + remaining.seconds + " Second(s)");

        }, 1000);

        function getTimeRemaining(endtime) {
            var t = Date.parse(endtime) - Date.parse(new Date());
            var seconds = Math.floor((t / 1000) % 60);
            var minutes = Math.floor((t / 1000 / 60) % 60);
            var hours = Math.floor((t / (1000 * 60 * 60)) % 24);
            var days = Math.floor(t / (1000 * 60 * 60 * 24));
            return {
                'total': t,
                'days': days,
                'hours': hours,
                'minutes': minutes,
                'seconds': seconds
            };
        }
    </script>
}
else
{
     <script>
        $("#postQuote :input").attr("disabled", true);
     </script>
}





